{"name":"Logisimcircuits","tagline":"A series of logisim circuits completed for computer architecture. Includes rudimentary circuits that are comprised in an ALU and CPU.","body":"LogisimCircuits\r\n===============\r\n\r\n###A series of logisim circuits completed for computer architecture. Includes rudimentary circuits that are comprised in an ALU and CPU.\r\n\r\n======\r\n\r\nThe following gif demonstrates a 4-bit ALU circuit with a OR, NOT, AND, and Addition unit.\r\n\r\n![ALU circuit](https://raw.githubusercontent.com/LucianNovo/LogisimCircuits/master/ALU_demo.gif?token=1621753__eyJzY29wZSI6IlJhd0Jsb2I6THVjaWFuTm92by9Mb2dpc2ltQ2lyY3VpdHMvbWFzdGVyL0FMVV9kZW1vLmdpZiIsImV4cGlyZXMiOjE0MDQ4NTI0MzR9--6248961f1a7d9c9da006b3427e9ddff45b0e8d1f \"ALU Circuit\")\r\nThe 4 bit ALU is capable of calculating integer values between 0 and 31(inclusive) as long as overflower bit is observed(c4). 4 bit ALUs without overflow outputs can only generate integer values from 0 and 15(inclusive). \r\n\r\nTo run each circuit, you must download the logisim software by ozark. \r\n\r\n_Testing circuit made by professor Sean Davis at UCDavis. ALU and addition unit made by Lucian Novosel and Sean Shojae._\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}